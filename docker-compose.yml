version: '3'
services:
  myservice:
    build:
      context: .
      dockerfile: Dockerfile
    image: result/latest
   
  
  models:
    image: tp33/django
    container_name: models
    external_links:
      - mysql:db
    volumes:
      - "./app/models:/app"
    ports:
      - "8001:8000"
    command: bash -c "mod_wsgi-express start-server  --working-directory . --reload-on-changes models/wsgi.py"

  exp:
    image: tp33/django
    container_name: exp
    links:
      - models:models-api
    volumes:
      - "./app/exp:/app"
    ports:
      - "8002:8000"
    command: bash -c "mod_wsgi-express start-server  --working-directory . --reload-on-changes exp/wsgi.py"


  web:
    image: tp33/django
    container_name: web
    links:
      - exp:exp-api
    volumes:
      - "./app/web:/app"
    ports:
      - "8000:8000"
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes web/wsgi.py"

  kafka:
     image: spotify/kafka
     container_name: kafka
     environment:
        ADVERTISED_HOST: kafka
        ADVERTISED_PORT: 9092
     hostname: kafka

  es:
     image: elasticsearch:2.0
     container_name: es
     ports:
        - "9200:9200"

  batch:
     image: tp33/django
     container_name: batch
     volumes:
        - ./app/batch:/app
     links:
        - kafka:kafka
        - es:es
     command: bash -c "python script.py"
  
  load:
   image: haproxy
   container_name: load
   links:
      - web
   volumes:
      - ./app/batch/:/usr/local/etc/haproxy/
   ports:
      - "80:80"

  selenium-chrome:
    image: selenium/standalone-chrome
    container_name: selenium-chrome
    links:
      - web:web
    ports:
      - "4444:4444"

  selenium-test:
    image: tp33/django
    container_name: selenium-test
    links:
      - selenium-chrome:selenium-chrome
      - web:web
    volumes:
      - ./app/selenium:/app
    command: bash -c "pip install selenium==3.14.0 && python selenium_test.py"

  spark-master:
  image: gettyimages/spark
  command: >
    bash -c "bin/spark-class org.apache.spark.deploy.master.Master -h spark-master &&
    apt-get update &&
    apt-get install python3-dev libmysqlclient-dev -y &&
    apt-get install python-pip -y &&
    pip install mysqlclient &&
    apt-get install python-mysqldb"
  container_name: spark-master
  hostname: spark-master
  environment:
    MASTER: spark://spark-master:7077
    SPARK_CONF_DIR: /conf
  expose:
    - 7001
    - 7002
    - 7003
    - 7004
    - 7005
    - 7006
    - 7077
    - 6066
  ports:
    - 4040:4040
    - 6066:6066
    - 7077:7077
    - 8080:8080
  volumes:
    - ./app/spark:/tmp/data

spark-worker:
  image: gettyimages/spark
  command: >
    bash -c "bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077 &&
    apt-get update &&
    apt-get install python3-dev libmysqlclient-dev -y &&
    apt-get install python-pip -y &&
    pip install mysqlclient &&
    apt-get install python-mysqldb &&
    python spark_clear.py"
  container_name: spark-worker
  hostname: spark-worker
  environment:
    SPARK_CONF_DIR: /conf
    SPARK_WORKER_CORES: 2
    SPARK_WORKER_MEMORY: 512m
    SPARK_WORKER_PORT: 8881
    SPARK_WORKER_WEBUI_PORT: 8081
  links:
    - spark-master
  expose:
    - 7012
    - 7013
    - 7014
    - 7015
    - 7016
    - 8881
  ports:
    - 8081:8081
  volumes:
    - ./app/spark:/tmp/data
